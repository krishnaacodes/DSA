
// Brute Force .

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL || head -> next == NULL) return head;

        ListNode* newll = new ListNode(head->val);
        ListNode* nhead = newll;
        int index = 2;
        ListNode* first = head -> next;
        while(first != NULL){
          if(index % 2 != 0){
            ListNode* temp = new ListNode(first->val);
            
            newll-> next = temp;
            newll = temp;
           
          }
           index++;
           first = first->next;
        }
         
         first = head;
         index = 1;
         while(first != NULL){
            if(index%2 == 0){
                ListNode* temp = new ListNode(first->val);
                newll -> next =temp;
                newll = temp;
            }
            index++;
            first = first -> next;
         }
     
   
        
        return nhead;
    }
};
